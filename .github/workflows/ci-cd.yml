name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Run tests
        run: cargo test

  build-and-release:
    name: Build & Release
    needs: test
    if: success()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-edit
        run: cargo install cargo-edit --features vendored-openssl

      - name: Get current version
        id: get_version
        run: echo "CURRENT_VERSION=$(cargo pkgid -p rmail | cut -d '#' -f 2)" >> $GITHUB_OUTPUT

      - name: Increment version
        run: |
          cargo set-version --bump patch
          echo "NEW_VERSION=$(cargo pkgid -p rmail | cut -d '#' -f 2)" >> $GITHUB_ENV

      - name: Build for Linux
        run: cargo build --release --target x86_64-unknown-linux-gnu
      - name: Build for macOS
        run: cargo build --release --target x86_64-apple-darwin
      - name: Build for Windows
        run: cargo build --release --target x86_64-pc-windows-msvc

      - name: Prepare artifacts
        run: |
          mkdir -p artifacts
          cp target/x86_64-unknown-linux-gnu/release/rmail artifacts/rmail-linux
          cp target/x86_64-apple-darwin/release/rmail artifacts/rmail-macos
          cp target/x86_64-pc-windows-msvc/release/rmail.exe artifacts/rmail-windows.exe

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.NEW_VERSION }}
          name: Release v${{ env.NEW_VERSION }}
          draft: false
          prerelease: false
          files: |
            artifacts/rmail-linux
            artifacts/rmail-macos
            artifacts/rmail-windows.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
